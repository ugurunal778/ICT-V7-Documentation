(function ($) {

  // Autocomplete
  $.ui.autocomplete.prototype._renderItem = function (ul, item) {
    var term = this.term;
    var first = ("group" in item)  ? 'first' : '';
    var innerHTML = '<div class="ui-autocomplete-fields ' + first + '">';
    if (item.fields) {
      $.each( item.fields, function( key, value ) {
      var terms = term.split(' ');
      var output = value;
      /**
       * Aranan metin tek kelime ise
       */
      if(terms.length == 1){
          var regex = new RegExp( '(' + $.trim(term) + ')', 'gi' );
        if (value.indexOf('src=') == -1 && value.indexOf('href=') == -1) {
          output = value.replace(regex, "<span class='ui-autocomplete-field-term'>$1</span>");
        }
      }
      /**
       * Aranan metin birden fazla gelime ise
       */
      else if(terms.length > 1){
        var regexPattern = ''; //regex deseninin tutulduğu değişken
        var number = ''; //replace numaraları
        $.each(terms,function(i,item){
          if(regexPattern.length > 0)
            regexPattern = regexPattern+'|'+'('+item+')';
          else
            regexPattern = regexPattern+'('+item+')';

          /**
           * Replace metotunda sayılar 1'den başladığı için değer arttırılır.
           */
          i++;
          number = number+'$'+i;

        });
        regex = new RegExp( regexPattern, 'gi' ); //regex deseni oluşturulur.
        if (value.indexOf('src=') == -1 && value.indexOf('href=') == -1) {
          output = output.replace(regex, "<span class='ui-autocomplete-field-term'>"+number+"</span>");
        }
      }
        innerHTML += ('<div class="ui-autocomplete-field-' + key + '">' + output + '</div>');
      });
    } else {
      // Case no results :
      innerHTML += ('<div class="ui-autocomplete-field-noresult">' + item.label + '</div>');
    }
    innerHTML += '</div>';

    var group = '';
    if ("group" in item) {
      group += ('<div class="ui-autocomplete-field-group ' + item.group.group_id + '">' + item.group.group_name + '</div>');
      $(group).appendTo( ul );
    }
    return  $("<li class=ui-menu-item-" + first + "></li>" )
        .data( "item.autocomplete", item )
        .append( "<a>" + innerHTML + "</a>" )
        .appendTo( ul );
  };

  $.ui.autocomplete.prototype._resizeMenu = function() {
    var ul = this.menu.element;
    ul.outerWidth(Math.max( ul.width("").outerWidth() + 5, this.options.position.of == null ? this.element.outerWidth() : this.options.position.of.outerWidth()));
  };

  var selectedItem;
  var selectedItems;
  var inputTextVal;

  Drupal.behaviors.search_autocomplete = {
    attach: function(context) {
      if (Drupal.settings.search_autocomplete) {
        $.each(Drupal.settings.search_autocomplete, function(key, value) {
          selectedItems = $(Drupal.settings.search_autocomplete[key]['selector']);

          /**
           * Enter'a basıldığında form submit edilmeyecek.
           * keyCode: 13 == enter
           */
          $(selectedItems).keypress(function(key){
            if(key.keyCode == 13){
                  key.preventDefault();
                  return false;
            }
          });

          selectedItems.each(function(){
            if(!$(this).is("[class*='autocomplete']")) selectedItem = $(this);
          });
          $(selectedItem).keydown(function(){
            $('ul#ui-theme-basic-blue').removeClass('positionFixed');
          });
          var NoResultsLabel = Drupal.settings.search_autocomplete[key].no_results;
          $(Drupal.settings.search_autocomplete[key].selector).addClass('ui-autocomplete-processed ui-theme-' + Drupal.settings.search_autocomplete[key].theme).autocomplete({
            minLength: Drupal.settings.search_autocomplete[key].minChars,
            source: function(request, response) {
              inputTextVal = request.term; //aranan value alınır.
              // External URL:
              if (Drupal.settings.search_autocomplete[key].type == 'external') {
                $.getJSON(Drupal.settings.search_autocomplete[key].datas, { q: request.term }, function (results) {
                  // Only return the number of values set in the settings.
                  if (!results.length && NoResultsLabel) {
                      results = [NoResultsLabel];
                  }
                  response(results.slice(0, Drupal.settings.search_autocomplete[key].max_sug));
                });
              }
              // Internal URL:
              else if (Drupal.settings.search_autocomplete[key].type == 'internal' || Drupal.settings.search_autocomplete[key].type == 'view') {
                $.getJSON(Drupal.settings.search_autocomplete[key].datas + request.term, { }, function (results) {
                  // Only return the number of values set in the settings.
                  if (!results.length && NoResultsLabel) {
                      results = [NoResultsLabel];
                  }
                  response(results.slice(0, Drupal.settings.search_autocomplete[key].max_sug));
                });
              }
              // Static resources:
              else if (Drupal.settings.search_autocomplete[key].type == 'static') {
                var results = $.ui.autocomplete.filter(Drupal.settings.search_autocomplete[key].datas, request.term);
                    if (!results.length && NoResultsLabel) {
                    results = [NoResultsLabel];
                }
                // Only return the number of values set in the settings.
                response(results.slice(0, Drupal.settings.search_autocomplete[key].max_sug));
              }
            },
            open: function(event, ui) {
              $('<li class="search-more"><a><strong>'+inputTextVal+'</strong> hakkında daha fazla sonuç</a></li>').insertBefore('#ui-theme-basic-blue li.ui-menu-item:first');
              $('ul#ui-theme-basic-blue').addClass('positionFixed');
              //selectedItem = $(Drupal.settings.search_autocomplete[key]['selector']);
              //inputTextVal = selectedItem.val();
              //console.log(event);
              $(".ui-autocomplete li.ui-menu-item:odd").addClass("ui-menu-item-odd");
              $(".ui-autocomplete li.ui-menu-item:even").addClass("ui-menu-item-even");

              var replaceText = $('ul#ui-theme-basic-blue a').each(function(){
                var replaceText = $(this).html();
                replaceText = replaceText.replace(/\[/ig,'<div class="ui-autocomplete-field-field_answer_count">');
                replaceText = replaceText.replace(/\]/ig,'</div>');
                $(this).html(replaceText);
              });
              $(selectedItem).val(inputTextVal);
            },
            select: function(event, ui) {
              $(selectedItem).val(inputTextVal);
              if (ui.item.label === NoResultsLabel) {
                event.preventDefault();
              } else if (Drupal.settings.search_autocomplete[key].auto_redirect == 1 && ui.item.link) {
                window.open(ui.item.link,'_blank');
              }
            },
            close: function (event, ui) {
              if($('ul#ui-theme-basic-blue').hasClass('positionFixed'))
                $(selectedItem).val(inputTextVal);
            },
            focus: function (event, ui) {
              if (ui.item.label === NoResultsLabel) {
                event.preventDefault();
              }
              $(selectedItem).val(inputTextVal);
            },
            appendTo: $(Drupal.settings.search_autocomplete[key].selector).parent(),
          }).autocomplete("widget").attr("id", "ui-theme-" + Drupal.settings.search_autocomplete[key].theme);
        });
        $('fieldset#search, ul#ui-theme-basic-blue').hover(function(){
          if($('ul#ui-theme-basic-blue').hasClass('positionFixed'))
            $(selectedItem).val(inputTextVal);
          });
      }
      $('form#search-block-form').hover(function(){
          if($('ul#ui-theme-basic-blue').hasClass('positionFixed'))
            $(selectedItem).val(inputTextVal);
      });
          $('li.search-more').on('click',function(){
            var url = Drupal.settings.basePath+'search/node/'+inputTextVal;
            window.open(url,'_blank');
          });
    }
  };
})(jQuery);
